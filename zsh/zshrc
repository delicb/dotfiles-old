bindkey -e

# add own functions dir to fpath
fpath=( "$HOME/.zsh/functions" $fpath )

# enable tab completion
autoload -Uz compinit && compinit

#source ~/.zshenv

# load all aliases
source ~/.aliases

# load setup for prompt
source ~/.zsh/prompt.zsh

func gfmt() {
    echo Running gofmt
    gofmt -l -s -w $(find . -type f -name '*.go' -not -path './vendor/*')
    echo Running goimports
    goimports -l -w $(find . -type f -name '*.go' -not -path './vendor*')
}

func cover () {
    t="/tmp/go-cover.$$.tmp"
    go test -coverprofile=$t $@ && go tool cover -html=$t && unlink $t
}

func using_port() {
    lsof -n -i:$1 | grep LISTEN
}

venv() {
    local venvs_root
    venvs_root=~/venvs
    if [[ -z $1 ]]; then
        echo "Usage: venv <NAME>"
        return 1
    fi
    if [[ $1 == "off" ]]; then
        echo "param if off"
        deactivate
        return 0
    fi

    if [[ -d $venvs_root/$1 ]]; then

        if [[ -f $venvs_root/$1/bin/activate ]]; then
            VIRTUAL_ENV_DISABLE_PROMPT=1 source $venvs_root/$1/bin/activate
        else
            echo "Folder ~/venvs/$1 exists, but does not seem to be valid virtual environment"
            return 2
        fi
    else
        echo "Venv $1 does not exist. For now - create it manually."
    fi
}

if [[ $(whoami) = root ]]; then
    umask 0022
else
    umask 0002
fi


# bind fn+left-arrow to go to benening of the line
bindkey "^[[H" beginning-of-line
# bind fn+right-arrow to go to end of the line
bindkey "^[[F" end-of-line
# bind fn+backspace to delete char to the right
bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char


zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path .zcache
zstyle ':completion:*:cd:*' ignore-parents parent pwd

zstyle ':completion::complete:cd::' tag-order local-directories
zstyle ':completion:*' menu select=2
zstyle ':completion:*' squeeze-slashes true
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*'   force-list always

# configure command history
setopt appendhistory
export HISTFILE=$HOME/.zhistory
export SAVEHIST=1000
export HISTSIZE=10000

setopt COMPLETE_IN_WORD
setopt CORRECT

setopt NO_BEEP

eval "$(pyenv init - --no-rehash)"

export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
export PATH="/usr/local/opt/postgresql@9.5/bin:$PATH"

if [ -f ~/.private.zshrc ]; then
    source ~/.private.zshrc
fi
