# GnuPGcan automatically create and retrieve keys as needed using this
# option. This happens when encrypting to an email address (in the 
# "user@example.com" form) and there are no keys matching "user@example.com"
# in the local keyring. This option takes any number of mechanisms which are
# tried in given order. The default is "--auto-key-locate local" to search for
# keys only in the local key database.
auto-key-locate local,keyserver

# When using --refresh-keys, if the key in question has a preferred keyserver
# URL, do not use it and use one defined by local keyserver URL.
keyserver-options no-honor-keyserver-url

# Set list of personal cipher preferences. 
personal-cipher-preferences AES256 AES192 AES CAST5

# Set list of personal digest preferences. 
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# This preference list is used for new keys and becomes the default for "setpref" in edit menu.
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

# Digest algorithgm to use when signing a key.
cert-digest-algo SHA512
# Algorithm to use as symmetric cipher for encrypting private keys.
s2k-cipher-algo AES256
# Digest algorithm for mangling passphrases protecting private keys.
s2k-digest-algo SHA512
# Set charset
charset utf-8

# Do  not  merge  primary  user  ID and  primary  key  in
# --with-colon listing  mode and print  all timestamps as
# seconds since 1970-01-01.
fixed-list-mode

# Do not add comments in cleartext signatures.
no-comments
# Do not include version in ASCII armored output.
no-emit-version

# Set format of a key when printing it.
keyid-format 0xlong


# Display the calculated validity of user IDs during key listings.
list-options show-uid-validity

# Display the calculated validity of the user IDs on the key that issued the signature.
verify-options show-uid-validity

# Show key fingerprint when printing it.
with-fingerprint

# This is now obsolete, gpg always uses agent.
use-agent

# When verifying a signature made from a subkey, ensure that the cross 
# certification "back signature" on the subkey is present and valid. 
# This protects against a subtle attack against subkeys that can sign.
require-cross-certification

# ID of a key to use by default for signing
#default-key F4D95D71B5B0C2C4125370521F0B33B41DA5214F
